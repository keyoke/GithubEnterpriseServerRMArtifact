{
  "manifestVersion": 1,
  "id": "githubenterprise-custom-release-artifact-server-extension",
  "publisher": "soft-cor",
  "version": "1.0.7",
  "name": "GitHub Enterprise Release Artifact",
  "description": "Add support for GitHub Enterprise repositories as a artifact for Release Pipelines",
  "public": true,
  "galleryFlags": [
  ],
  "categories": [ "Build and release" ],
  "content": {
    "details": {
        "path": "overview.md"
    },
    "license": {
      "path": "LICENSE"
    }
  },
  "links": {
      "support": {
          "uri": "https://blog.soft-cor.com"
      }
  },
  "repository": {
    "type": "git",
    "uri": "https://github.com/keyoke/GithubEnterpriseServerRMArtifact"
  },
  "badges": [
    {
        "href": "https://dev.azure.com/softcores/GithubEnterpriseServerRMArtifact/_build?definitionId=1&_a=summary",
        "uri": "https://dev.azure.com/softcores/GithubEnterpriseServerRMArtifact/_apis/build/status/keyoke.GithubEnterpriseServerRMArtifact?branchName=master",
        "description": "Azure Pipeline for GithubEnterpriseServerRMArtifact"
    }
  ],
  "tags": [
    "github",
    "enterprise",
    "ghe",
    "continuous",
    "release",
    "deploy",
    "cd"
  ],
  "targets": [
    {
      "id": "Microsoft.TeamFoundation.Server"
    }
  ],
  "demands": [ 
    "contribution/ms.vss-endpoint.githubenterprise-endpoint-type",
    "api-version/4.0"
  ],
  "icons": {
    "default": "icon-githubenterprise-logo.png"
  },
  "screenshots": [
    {
      "path": "images/screen1.png"
    },
    {
      "path": "images/screen2.png"
    },
    {
      "path": "images/screen3.png"
    },
    {
      "path": "images/screen4.png"
    },
    {
      "path": "images/screen5.png"
    }
  ],
  "files": [
    {
      "path": "images/screen1.png",
      "addressable": true
    },
    {
        "path": "images/screen2.png",
        "addressable": true
    },
    {
        "path": "images/screen3.png",
        "addressable": true
    },
    {
        "path": "images/screen4.png",
        "addressable": true
    },
    {
        "path": "images/screen5.png",
        "addressable": true
    },
    {
      "path": "icon-githubenterprise-logo.png",
      "addressable": true
    },
    {
      "path": "dist/Tasks/DownloadArtifactsGitHubEnterprise"
    }
  ],
  "contributions": [
      {
          "id": "gitclone-build-release-task",
          "type": "ms.vss-distributed-task.task",
          "targets": [
              "ms.vss-distributed-task.tasks"
          ],
          "properties": {
              "name": "dist/Tasks/DownloadArtifactsGitHubEnterprise"
          }
      },
      {
      "id": "githubenterprise-custom-release-artifact-type",
      "description": "GitHub Enterprise Artifact",
      "type": "ms.vss-releaseartifact.release-artifact-type",
      "targets": [
        "ms.vss-releaseartifact.artifact-types"
      ],
      "properties": {
        "name": "GitHubEnterprise",
        "displayName": "GitHub Enterprise",
        "endpointTypeId": "githubenterprise",
        "uniqueSourceIdentifier": "{{connection}}:{{definition}}",
        "downloadTaskId": "6a23cb82-09af-48a3-bec7-0d30ca0c25e7",
        "artifactType": "SourceControl",
        "inputDescriptors": [
          {
            "id": "connection",
            "name": "Service connection",
            "description": "Service connection ID",
            "inputMode": "Combo",
            "isConfidential": false,
            "hasDynamicValueInformation": true,
            "validation": {
              "isRequired": true,
              "dataType": "string",
              "maxLength": 300
            }
          },
          {
            "id": "definition",
            "name": "Source (repository)",
            "description": "Repository to pull",
            "inputMode": "Combo",
            "isConfidential": false,
            "hasDynamicValueInformation": true,
            "dependencyInputIds": [
              "connection"
            ],
            "validation": {
              "isRequired": true,
              "dataType": "string",
              "maxLength": 300
            }
          },
          {
            "id": "branch",
            "name": "Default branch",
            "description": "Branch to checkout",
            "inputMode": "Combo",
            "isConfidential": false,
            "hasDynamicValueInformation": true,
            "dependencyInputIds": [
              "connection",
              "definition"
            ],
            "validation": {
              "isRequired": true,
              "dataType": "string",
              "maxLength": 300
            }
          },
          {
            "id": "defaultVersionType",
            "name": "Default version",
            "description": "The default version will be deployed when new releases are created. The version can be changed for manually created releases at the time of release creation",
            "inputMode": "Combo",
            "isConfidential": false,
            "hasDynamicValueInformation": false,
            "validation": {
              "isRequired": true,
              "dataType": "string",
              "maxLength": 300
            },
            "values": {
              "inputId": "defaultVersionTypeValues",
              "defaultValue": "latestFromBranchType",
              "isLimitedToPossibleValues": true,
              "possibleValues": [
                {
                  "value": "latestFromBranchType",
                  "displayValue": "Latest from the default branch"
                },
                {
                  "value": "specificVersionType",
                  "displayValue": "Specific commit from default branch"
                },
                {
                  "value": "selectDuringReleaseCreationType",
                  "displayValue": "Specify at the time of release creation"
                }
              ]
            }
          },
          {
            "id": "checkoutSubmodules",
            "name": "Checkout submodules",
            "description": "Checkout submodules",
            "inputMode": "checkbox",
            "isConfidential": false,
            "hasDynamicValueInformation": false,
            "validation": {
              "isRequired": false
            }
          },
          {
            "id": "checkoutNestedSubmodules",
            "name": "Recursion level",
            "description": "Recursion level",
            "inputMode": "Combo",
            "isConfidential": false,
            "hasDynamicValueInformation": false,
            "validation": {
              "isRequired": false
            },
            "properties": {
              "visibleRule": "checkoutSubmodules == true"
            },
            "values": {
              "inputId": "checkoutNestedSubmodulesValues",
              "defaultValue": true,
              "isLimitedToPossibleValues": true,
              "possibleValues": [
                {
                  "value": false,
                  "displayValue": "Top-level submodules only"
                },
                {
                  "value": true,
                  "displayValue": "Any nested submodules within"
                }
              ]
            }
          },
          {
            "id": "defaultVersionSpecific",
            "name": "Commit",
            "description": "Default to a specific commit",
            "inputMode": "Combo",
            "isConfidential": false,
            "hasDynamicValueInformation": true,
            "dependencyInputIds": [
              "connection",
              "definition",
              "branch",
              "defaultVersionType"
            ],
            "validation": {
              "isRequired": true,
              "dataType": "string",
              "maxLength": 300
            },
            "properties": {
              "visibleRule": "defaultVersionType == specificVersionType"
            }
          },
          {
            "id": "fetchDepth",
            "name": "Shallow fetch depth",
            "description": "Limits fetching to the specified number of commits from the tip of each remote branch history.",
            "inputMode": "textbox",
            "isConfidential": false,
            "hasDynamicValueInformation": false,
            "validation": {
              "isRequired": false
            }
          },
          {
            "id": "artifacts",
            "name": "Artifacts",
            "description": "Artifacts",
            "inputMode": "none",
            "isConfidential": false,
            "hasDynamicValueInformation": true,
            "validation": {
              "isRequired": false,
              "dataType": "string"
            },
            "dependencyInputIds": [
              "connection",
              "definition",
              "defaultVersionType",
              "branch",
              "defaultVersionSpecific"
            ]
          }
        ],
        "taskInputMapping": {
          "connection": "{{{connection}}}",
          "definition": "{{{definition}}}",
          "submodules": "{{#equals checkoutSubmodules 'true' 1}}{{#equals checkoutNestedSubmodules 'true' 1}}Recursive{{else}}True{{/equals}}{{/equals}}",
          "fetchDepth": "{{{fetchDepth}}}"
        },
        "dataSourceBindings": [
          {
            "target": "definition",
            "endpointUrl":"{{endpoint.url}}api/v3/user/repos",
            "resultSelector":"jsonpath:$.[*]",
            "resultTemplate": "{ Value : \"{{{full_name}}}\", DisplayValue : \"{{{full_name}}}\" }"
          },
          {
            "target": "branch",
            "endpointUrl":"{{endpoint.url}}api/v3/repos/{{{definition}}}/branches",
            "resultSelector":"jsonpath:$.[*]",
            "resultTemplate": "{ Value : \"{{{name}}}\", DisplayValue : \"{{{name}}}\" }"
          },
          {
            "target": "defaultVersionSpecific",
            "endpointUrl":"{{endpoint.url}}api/v3/repos/{{{definition}}}/commits?sha={{branch}}",
            "resultSelector":"jsonpath:$.[*]",
            "resultTemplate": "{ Value : \"{{{sha}}}\", DisplayValue : \"{{#stringLeft sha 8}}{{/stringLeft}} ({{#stringLeft commit.message 245}}{{/stringLeft}})\" }"
          },
          {
            "target": "versions",
            "endpointUrl":"{{endpoint.url}}api/v3/repos/{{{definition}}}/commits?sha={{branch}}",
            "resultSelector":"jsonpath:$.[*]",
            "resultTemplate": "{ Value : \"{{{sha}}}\", DisplayValue : \"{{#stringLeft sha 8}}{{/stringLeft}} ({{#stringLeft commit.message 245}}{{/stringLeft}})\" }"
          },
          {
            "target": "latestversion",
            "endpointUrl":"{{{endpoint.url}}}api/v3/repos/{{{definition}}}/commits?sha={{version}}",
            "resultSelector":"jsonpath:$.[0]",
            "resultTemplate": "{ Value : \"{{{sha}}}\", DisplayValue : \"{{#stringLeft sha 8}}{{/stringLeft}} ({{#stringLeft commit.message 245}}{{/stringLeft}})\" }"
          },
          {
            "target": "artifacts",
            "endpointUrl":"{{endpoint.url}}api/v3/repos/{{{definition}}}/contents?ref={{#equals defaultVersionType 'specificVersionType'}}{{version}}{{else}}{{branch}}{{/equals}}",
            "resultSelector":"jsonpath:$.[*]",
            "resultTemplate": "{ \"value\" : \"{{{path}}}\",  \"displayValue\" : \"{{{name}}}\",  \"data\" : { {{#equals type 'dir'}} \"artifactType\": \"folder\" {{else}} \"itemType\": \"file\" {{/equals}} } }"
          },
          {
            "target": "artifactItems",
            "endpointUrl":"{{endpoint.url}}api/v3/repos/{{{definition}}}/contents/{{itemPath}}?ref={{#equals defaultVersionType 'specificVersionType'}}{{version}}{{else}}{{branch}}{{/equals}}",
            "resultSelector":"jsonpath:$.[*]",
            "resultTemplate": "{ \"value\" : \"{{{path}}}\",  \"displayValue\" : \"{{{name}}}\",  \"data\" : { {{#equals type 'dir'}} \"artifactType\": \"folder\" {{else}} \"itemType\": \"file\" {{/equals}} } }"
          },
          {
            "target": "createwebhook",
            "endpointUrl": "{{{endpoint.url}}}api/v3/repos/{{{definition}}}/hooks",
            "requestVerb": "Post",
            "requestContent": "{\"name\":\"web\", \"active\":true, \"events\":[\"push\", \"pull_request\", \"issue_comment\"], \"config\": {\"secret\":\"{{{secret}}}\", \"url\": \"{{{payloadUrl}}}\", \"content_type\": \"json\"}}",
            "resultSelector": "jsonpath:$"
          },
          {
            "target": "deletewebhook",
            "endpointUrl": "{{{endpoint.url}}}api/v3/repos/{{{definition}}}/hooks/{{{id}}}",
            "requestVerb": "Delete",
            "resultSelector": "none"
          },
          {
            "target": "listwebhook",
            "endpointUrl": "{{{endpoint.url}}}api/v3/repos/{{{definition}}}/hooks",
            "requestVerb": "Get",
            "resultSelector": "jsonpath:$.[*]",
            "resultTemplate": "{ \"value\" : \"{{{config.url}}}\", \"displayValue\" : \"{{{config.url}}}\", \"data\": { \"id\": {{{id}}} }}"
          }
        ],
        "browsableArtifactTypeMapping": {
          "folder": "artifactItems"
        },
        "ArtifactTriggerConfiguration" : {
            "isTriggerSupported": true,
            "isTriggerSupportedOnlyInHosted": false,
            "resources": {
              "TriggerDisabledMessage": "Enabling the trigger will create a new release every time there is a change on the Github Enterprise Repo"
            },
            "payloadHashHeaderName": "X-Hub-Signature",
            "webhookPayloadMapping" : {
                "version": "{{head_commit.id}}",
                "definition": "{{repository.full_name}}"
            }
        }
      }
    }
  ],
  "scopes": [],
  "contributionTypes": []
}